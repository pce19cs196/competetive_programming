https://leetcode.com/problems/word-break/
-------------------------------------------------------------
Recursive:

class Solution:
    def wordBreak(self, s: str, wordDict: List[str]) -> bool:
        wordict  = set(wordDict)
        return self.wordbreak(s,wordict)


    def wordbreak(self, s, wordDict) -> bool:
        if not s:
            return True
        for i in range(1,len(s)+1):  
            if (s[0:i] in wordDict and self.wordbreak(s[i:],wordDict)):     
                return True
        return False
---------------------------------------------------------------------
Top down+memoization

class Solution:
    def wordBreak(self, s: str, wordDict: List[str]) -> bool:
        wordict  = set(wordDict)
        dict1 ={}
        return self.wordbreak(s,wordict,dict1)


    def wordbreak(self, s, wordDict,dict1) -> bool:
        if not s:
            return True
        if s in dict1:
            return dict1[s]
        for i in range(1,len(s)+1):
            if (s[0:i] in wordDict and self.wordbreak(s[i:],wordDict,dict1)):
                dict1[s] = True
                return True

        dict1[s] = False
        
       
        return False
------------------------------------------------------------------------------------
