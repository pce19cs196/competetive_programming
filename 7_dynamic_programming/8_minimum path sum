https://leetcode.com/problems/minimum-path-sum/description/
-----------------------------------------------------------------------------------------
Top down + memoization
class Solution:
    def minPathSum(self, grid: List[List[int]]) -> int:
        dict1 = {}
        return self.minPath(grid , len(grid) -1 , len(grid[0]) -1,dict1)
    
    def minPath(self,grid,x,y,dict1):
        if (x,y) in dict1:
            return dict1[(x,y)]
        if x == 0 and y == 0 :
            return grid[x][y]
        if x ==0   :
            dict1[(x,y)] =  grid[x][y] + self.minPath(grid,x,y-1,dict1)
        elif y ==0:
            dict1[(x,y)] =  grid[x][y] + self.minPath(grid,x-1,y,dict1)
        else:
            dict1[(x,y)] =  min(grid[x][y] + self.minPath(grid,x-1,y,dict1) , grid[x][y] + self.minPath(grid,x,y-1,dict1))

        
        return dict1[(x,y)]
