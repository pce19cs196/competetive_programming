https://leetcode.com/problems/all-elements-in-two-binary-search-trees/description/
--------------------------------------------------------------------------------------
Approach: Inorder gives sorted list of elements.
          Apply inorder on both the trees . Store the sorted array . Apply merge operation

          Time: o(n)    + o(n) + o(n)
                inorder inorder  merge

          space: o(h)   +o(h)  + o(n) + o(n) + o(2n)
                 recursion stack + storing temp sorted array + merging array space



class Solution:
    def getAllElements(self, root1: TreeNode, root2: TreeNode) -> List[int]:
        result1 = []
        result2 = []
        self.inorder(root1,result1)
        self.inorder(root2,result2)
        result = []
        i = 0 
        j = 0

        while i<len(result1) and j < len(result2):
            if result1[i] <= result2[j]:
                result.append(result1[i])
                i+=1
            else:
                result.append(result2[j])
                j+=1

        while i<len(result1):
            result.append(result1[i])
            i+=1
        
        while j<len(result2):
            result.append(result2[j])
            j+=1
        
        return result

    
    def inorder(self,root,result):
        if not root:
            return 
        if root.left: self.inorder(root.left,result)
        result.append(root.val)
        if root.right: self.inorder(root.right,result)
        
