https://leetcode.com/problems/merge-two-binary-trees/
--------------------------------------------------------------------------
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def mergeTrees(self, root1: Optional[TreeNode], root2: Optional[TreeNode]) -> Optional[TreeNode]:

        def makeT(root1,root2):
            if root1 and root2:
                root = TreeNode(root1.val+root2.val)
                root.left = makeT(root1.left,root2.left)
                root.right = makeT(root1.right,root2.right)
                return root
            if root1:
                root = TreeNode(root1.val)
                root.left = makeT(root1.left,None)
                root.right = makeT(root1.right,None)
                return root
            if root2:
                root = TreeNode(root2.val)
                root.left = makeT(None,root2.left)
                root.right = makeT(None,root2.right)
                return root
            return None
        
        root = makeT(root1,root2)
        return root

---------------------------------------------------------------------------------------------------------
class Solution:
    def mergeTrees(self, root1: Optional[TreeNode], root2: Optional[TreeNode]) -> Optional[TreeNode]:

        def makeT(root1,root2):
            if not root1:
                return root2
            if not root2:
                return root1
            if root1 and root2:
                root = TreeNode(root1.val+root2.val)
                root.left = makeT(root1.left,root2.left)
                root.right = makeT(root1.right,root2.right)
                return root
            
            return None
        
        root = makeT(root1,root2)
        return root


                
