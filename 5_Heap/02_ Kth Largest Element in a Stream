https://leetcode.com/problems/kth-largest-element-in-a-stream/description/
----------------------------------------------------------------------------------------------------------------------------
Time complexity:  def __init__ : 
                  o(nlogk)
                 def add :
                    o(logk)

class KthLargest:

    def __init__(self, k: int, nums: List[int]):
        self.k = k
        self.arr = []

        heapq.heapify(self.arr)

        for i in nums:
            heapq.heappush(self.arr,i)
            if len(self.arr)>self.k:
                heapq.heappop(self.arr)
        

    def add(self, val: int) -> int:
        heapq.heappush(self.arr,val)
        if len(self.arr)>self.k:
            heapq.heappop(self.arr)
        return self.arr[0]
