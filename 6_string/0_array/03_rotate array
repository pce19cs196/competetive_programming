https://leetcode.com/problems/rotate-array/description/
-----------------------------------------------------------------------------
Approach1 : Reversing the array three times.
What do we actually want here ? 
We want to move each element by k positions.
So, last k elements in the array would be at the beginning of the array.

Reversing would actually bring the elements in the beginning,
Now , since these elements are in reversed order , we want to re-reverse the order 
So, we will once again call reverse for first k elements

Time : o(n) , space: o(1)

class Solution:
    def rotate(self, nums: List[int], k: int) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        k = k%(len(nums))

        def reverse(start,end):

            while(start<=end):
                
                nums[start] , nums[end] = nums[end] ,nums[start]
                start +=1
                end -=1
        
        reverse(0,len(nums)-1)
        reverse(0,k-1)
        reverse(k,len(nums)-1)
---------------------------------------------------------------------------------------------
