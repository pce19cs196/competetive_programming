https://leetcode.com/problems/merge-two-sorted-lists/description/

Approach : use recursion
          Time : o(n)
          space : max( len(list1) , len(list2)  )    ---> stack space

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:

        
        if list1 and list2:
            if(list1.val<=list2.val):
                new_head = list1
                new_head.next = self.mergeTwoLists(list1.next,list2)
            else:
                new_head = list2
                new_head.next = self.mergeTwoLists(list1,list2.next)
        elif list1:
            return list1
        else:
            return list2
        
        return new_head

        
            
                
