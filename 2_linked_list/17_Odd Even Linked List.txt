https://leetcode.com/problems/odd-even-linked-list/description/
-----------------------------------------------------------------------------------------------------------------------------------


# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def oddEvenList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if not head :
            return head
        first_odd = head
        odd = head
        first_even  = head.next
        even = head.next
        while even and even.next:
            odd.next = odd.next.next
            even.next =even.next.next
            odd = odd.next
            even = even.next
        
        odd.next = first_even

        return first_odd


        
    
    

        







-------------------------------------------------------------------------------------------------------------------------
Approach1  : Handle two cases : 
                            when the position is even:
                                            do_something
                           when the position is odd :
                                           do_somethind
             
             Time : o(n) , space : o(1)
  

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def oddEvenList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if not head or not head.next:
            return head
        first_odd = head
        odd = head
        first_even  = head.next
        even = head.next
        n = 1

        while even and odd:
            if n%2 !=0 :
                odd.next = even.next
                odd =odd.next
            else:
                even.next = odd.next
                even = even.next
            n+=1
        
        temp = first_odd
        while temp.next:
            temp = temp.next
      
        temp.next = first_even

        return first_odd
        
 -----------------------------------------------------------------------------------------------------------------------------------------------------------

    
    

        


                                           
